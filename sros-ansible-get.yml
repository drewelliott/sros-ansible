---
- hosts: all
  gather_facts: false
  tasks:

### JSON STATE
    - block:
      - name: Get state in JSON format
        connection: netconf
        netconf_get:
          display: json
          filter: <state xmlns="urn:nokia.com:sros:ns:yang:sr:state"/>
        register: netconf_facts_state_json
      - name: Output state info to file
        copy:
          content: "{{ netconf_facts_state_json.output.data | to_nice_json }}"
          dest: "{{ inventory_hostname}}.json"
        delegate_to: localhost
        when: netconf_facts_state_json is defined
      - debug:
          msg: "Warning: Ansible JSON processing does not conform to RFC 7951"
      - debug:
          msg: "{{ inventory_hostname }}.json created"
      tags: ['never','json-state','state-json']

### JSON CONFIG
    - block:
      - name: Get config in JSON format
        connection: netconf
        netconf_get:
          display: json
          filter: <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf"/>
        register: netconf_facts_config_json
      - name: Output config to file
        copy:
          content: "{{ netconf_facts_config_json.output.data | to_nice_json }}"
          dest: "{{ inventory_hostname}}.json"
        delegate_to: localhost
        when: netconf_facts_config_json is defined
      - debug:
          msg: "Warning: Ansible JSON processing does not conform to RFC 7951"
      - debug:
          msg: "{{ inventory_hostname }}.json created"
      tags: ['never','json-config','config-json']

### YAML STATE
    - block:
      - name: Get state in JSON format
        connection: netconf
        netconf_get:
          display: json
          filter: <state xmlns="urn:nokia.com:sros:ns:yang:sr:state"/>
        register: netconf_facts_state_json
      - name: Output state info to file converted to YAML
        copy:
          content: "{{ netconf_facts_state_json.output.data | to_nice_yaml }}"
          dest: "{{ inventory_hostname}}.yaml"
        delegate_to: localhost
        when: netconf_facts_state_json is defined
      - debug:
          msg: "Warning: Ansible JSON processing does not conform to RFC 7951 which will effect the YAML output"
      - debug:
          msg: "{{ inventory_hostname }}.yaml created"
      tags: ['never','yaml-state','state-yaml','yml-state','state-yml']

### YAML CONFIG
    - block:
      - name: Get config in JSON format
        connection: netconf
        netconf_get:
          display: json
          filter: <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf"/>
        register: netconf_facts_config_json
      - name: Output config to file converted to YAML
        copy:
          content: "{{ netconf_facts_config_json.output.data | to_nice_yaml }}"
          dest: "{{ inventory_hostname}}.yaml"
        delegate_to: localhost
        when: netconf_facts_config_json is defined
      - debug:
          msg: "Warning: Ansible JSON processing does not conform to RFC 7951 which will effect the YAML output"
      - debug:
          msg: "{{ inventory_hostname }}.yaml created"
      tags: ['never','yaml-config','config-yaml','yml-config','config-yml']

### XML STATE
    - block:
      - name: Get state in XML format
        connection: netconf
        netconf_get:
          display: xml
          filter: <state xmlns="urn:nokia.com:sros:ns:yang:sr:state"/>
        register: netconf_facts_state_xml
      - name: Pretty format XML
        shell:
          cmd: "xmllint --xpath /data/state - | xmllint --format -"
          stdin: "{{ netconf_facts_state_xml.output }}"
        register: netconf_facts_state_xml_formatted
        delegate_to: localhost
      - name: Output state info to file
        copy:
          content: "{{ netconf_facts_state_xml_formatted.stdout }}"
          dest: "{{ inventory_hostname}}.xml"
        delegate_to: localhost
        when: netconf_facts_state_xml_formatted is defined
      - debug:
          msg: "{{ inventory_hostname }}.xml created"
      tags: ['never','xml-state','state-xml']

### XML CONFIG
    - block:
      - name: Get config in XML format
        connection: netconf
        netconf_get:
          display: xml
          filter: <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf"/>
        register: netconf_facts_config_xml
      - name: Pretty format XML
        shell:
          cmd: "xmllint --xpath /data/configure - | xmllint --format -"
          stdin: "{{ netconf_facts_config_xml.output }}"
        register: netconf_facts_config_xml_formatted
        delegate_to: localhost
      - name: Output config info to file
        copy:
          content: "{{ netconf_facts_config_xml_formatted.stdout }}"
          dest: "{{ inventory_hostname}}.xml"
        delegate_to: localhost
        when: netconf_facts_config_xml_formatted is defined
      - debug:
          msg: "{{ inventory_hostname }}.xml created"
      tags: ['never','xml-config','config-xml']